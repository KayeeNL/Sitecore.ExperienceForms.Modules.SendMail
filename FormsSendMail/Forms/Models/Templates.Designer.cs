
// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FormsSendMail.Forms.Models.Templates
{
  #region Designer generated code

  using System;
  using Sitecore;
  using Sitecore.Diagnostics;
  using Sitecore.Data.Items;
  using Sitecore.Data.Fields;
  using Sitecore.Data;
  
      
  /// <summary>Represents the "E-mail Template" template.</summary>
  public partial class EmailTemplate : CustomItem
  {
    public static readonly ID TemplateID = ID.Parse("{6EE6C18A-EAE2-4A2E-87ED-52869BD8DF06}");

    public EmailTemplate(Item item) : base(item) {
    }

    public static class FieldIds {
      
      public static readonly ID Subject = ID.Parse("{CB1504B6-4A81-4B89-8734-D18516561F2C}");

      public static readonly ID From = ID.Parse("{2D90C128-A08D-4D2D-8064-6D8F003ABFE8}");

      public static readonly ID To = ID.Parse("{B82156D3-0831-4BF9-84F9-7AF086E007A5}");

      public static readonly ID Cc = ID.Parse("{BE516C58-EFF8-4FAF-8A43-900D2EA80543}");

      public static readonly ID Bcc = ID.Parse("{3811345B-B1C0-4673-A2B9-21731A6DC95E}");

      public static readonly ID MessageRichText = ID.Parse("{639F3622-932E-423D-988B-61D002243840}");

      public static readonly ID MessageText = ID.Parse("{3ABF6EAC-3308-40D2-9BF8-0D6F41F65E5C}");

    }
    
    /// <summary>Gets or sets the "Subject" field.</summary>
    public string Subject 
    {
      get 
      {
        return this.InnerItem[FieldIds.Subject];
      }
      set
      {
        this.InnerItem[FieldIds.Subject] = value;
      }
    }
  
    /// <summary>Gets or sets the "From" field.</summary>
    public string From 
    {
      get 
      {
        return this.InnerItem[FieldIds.From];
      }
      set
      {
        this.InnerItem[FieldIds.From] = value;
      }
    }
  
    /// <summary>Gets or sets the "To" field.</summary>
    public string To 
    {
      get 
      {
        return this.InnerItem[FieldIds.To];
      }
      set
      {
        this.InnerItem[FieldIds.To] = value;
      }
    }
  
    /// <summary>Gets or sets the "Cc" field.</summary>
    public string Cc 
    {
      get 
      {
        return this.InnerItem[FieldIds.Cc];
      }
      set
      {
        this.InnerItem[FieldIds.Cc] = value;
      }
    }
  
    /// <summary>Gets or sets the "Bcc" field.</summary>
    public string Bcc 
    {
      get 
      {
        return this.InnerItem[FieldIds.Bcc];
      }
      set
      {
        this.InnerItem[FieldIds.Bcc] = value;
      }
    }
  
    /// <summary>Gets or sets the "Message RichText" field.</summary>
    public string MessageRichText 
    {
      get 
      {
        return this.InnerItem[FieldIds.MessageRichText];
      }
      set
      {
        this.InnerItem[FieldIds.MessageRichText] = value;
      }
    }
  
    /// <summary>Gets or sets the "Message Text" field.</summary>
    public string MessageText 
    {
      get 
      {
        return this.InnerItem[FieldIds.MessageText];
      }
      set
      {
        this.InnerItem[FieldIds.MessageText] = value;
      }
    }
  
    public static EmailTemplate Create(Item item) 
    {
      return new EmailTemplate(item);
    }

    public static implicit operator Item (EmailTemplate item)
    {
      if (item == null)
      {
        return null;
      }

      return item.InnerItem;
    }

    public static explicit operator EmailTemplate(Item item)
    {
      if (item == null)
      {
        return null;
      }

      if (item.TemplateID != TemplateID)
      {
        return null;
      }

      return Create(item);
    }
  }
      
  /// <summary>Represents the "E-mail Templates Folder" template.</summary>
  public partial class EmailTemplatesFolder : CustomItem
  {
    public static readonly ID TemplateID = ID.Parse("{4530888F-600C-4D40-9269-3BA82DDABD67}");

    public EmailTemplatesFolder(Item item) : base(item) {
    }

    public static class FieldIds {
      
    }
    
    public static EmailTemplatesFolder Create(Item item) 
    {
      return new EmailTemplatesFolder(item);
    }

    public static implicit operator Item (EmailTemplatesFolder item)
    {
      if (item == null)
      {
        return null;
      }

      return item.InnerItem;
    }

    public static explicit operator EmailTemplatesFolder(Item item)
    {
      if (item == null)
      {
        return null;
      }

      if (item.TemplateID != TemplateID)
      {
        return null;
      }

      return Create(item);
    }
  }
  
  #endregion
}

#pragma warning restore 1591
